(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{190:function(e,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),n("hr"),e._v(" "),e._m(1),e._v(" "),e._m(2),e._m(3),e._v(" "),e._m(4),e._m(5),e._v(" "),e._m(6),e._m(7),e._v(" "),e._m(8),e._m(9),e._v(" "),e._m(10),e._m(11),e._v(" "),e._m(12),e._m(13),e._v(" "),e._m(14),e._m(15),e._v(" "),e._m(16),e._m(17),e._v(" "),e._m(18),e._m(19),e._v(" "),e._m(20),e._m(21),e._v(" "),e._m(22),e._m(23),e._v(" "),e._m(24),e._m(25),e._v(" "),e._m(26),e._m(27),e._v(" "),e._m(28),e._m(29),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.cnblogs.com/goloving/p/9005130.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue路由跳转不刷新"),n("OutboundLink")],1)])]),e._v(" "),e._m(30),e._v(" "),e._m(31),e._m(32),e._v(" "),e._m(33),e._m(34),e._v(" "),e._m(35),e._m(36),e._v(" "),e._m(37),e._m(38),e._v(" "),e._m(39),e._m(40),e._v(" "),e._m(41),e._m(42),e._v(" "),n("p",[e._v("需要添加:")]),e._v(" "),e._m(43),e._m(44),e._v(" "),e._m(45),e._m(46),e._v(" "),n("p",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000012510886",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端表格分页"),n("OutboundLink")],1)]),e._v(" "),e._m(47),e._v(" "),e._m(48),e._m(49),e._v(" "),e._m(50),n("p",[e._v("vue.config.js")]),e._v(" "),e._m(51),n("p",[e._v("main.js")]),e._v(" "),e._m(52),n("p",[e._v("svgs/index.js")]),e._v(" "),e._m(53),n("p",[e._v("svgs/svg/404.svg")]),e._v(" "),n("p",[e._v("components/SvgIcon/index.vue")]),e._v(" "),e._m(54),n("p",[e._v("页面使用:")]),e._v(" "),e._m(55),e._m(56),e._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq_45062261/article/details/100132489",target:"_blank",rel:"noopener noreferrer"}},[e._v("PowerShell安装yarn出现的问题"),n("OutboundLink")],1),e._v(" "),n("a",{attrs:{href:"https://www.cnblogs.com/xiaomili/p/1051407",target:"_blank",rel:"noopener noreferrer"}},[e._v("yarn设置"),n("OutboundLink")],1)]),e._v(" "),e._m(57),e._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/weixin_43343144/article/details/88668787",target:"_blank",rel:"noopener noreferrer"}},[e._v("@路径配置"),n("OutboundLink")],1)]),e._v(" "),e._m(58),e._v(" "),n("p",[n("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2012/08/css-svg-filter-image-grayscale/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSS将图片转换成黑白"),n("OutboundLink")],1)]),e._v(" "),e._m(59),e._v(" "),e._m(60),e._m(61),e._v(" "),e._m(62),e._v(" "),e._m(63),n("p",[e._v("2.定义另外一个sass文件_handle.scss来操作1中的$theme变量")]),e._v(" "),e._m(64),n("p",[e._v("3.具体在vue中使用，直接引入对应混入器就好，取哪个颜色，传哪个key")]),e._v(" "),e._m(65),n("p",[e._v("4 切换html的属性data-theme的值")]),e._v(" "),e._m(66),e._m(67),e._v(" "),e._m(68),e._m(69),e._v(" "),e._m(70)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"常见问题收集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题收集","aria-hidden":"true"}},[this._v("#")]),this._v(" 常见问题收集")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"生成数组-0-1-n-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成数组-0-1-n-1","aria-hidden":"true"}},[this._v("#")]),this._v(" 生成数组[0, 1, ..., N-1]")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Array.from(Array(10).keys()) // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"获取本机ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取本机ip","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取本机ip")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function findIP(callback) { \n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n  var pc = new myPeerConnection({iceServers: []}), \n    noop = function() {},\n    localIPs = {}, \n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,\n    key;\n \n  function ipIterate(ip) {\n    if (!localIPs[ip]) callback(ip);\n    localIPs[ip] = true;\n  }\n  pc.createDataChannel(\"\"); \n  pc.createOffer().then(function(sdp) {\n    sdp.sdp.split('\\n').forEach(function(line) {\n      if (line.indexOf('candidate') < 0) return;\n      line.match(ipRegex).forEach(ipIterate);\n    });\n    pc.setLocalDescription(sdp, noop, noop);\n  }); \n  pc.onicecandidate = function(ice) { \n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\n  };\n}\n \nfindIP(function(ip){\n  console.log('got ip: ', ip);\n});\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"获取屏幕高宽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取屏幕高宽","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取屏幕高宽")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("document.body.clientWidth ==> BODY对象宽度\ndocument.body.clientHeight ==> BODY对象高度\ndocument.documentElement.clientWidth ==> 可见区域宽度\ndocument.documentElement.clientHeight ==> 可见区域高度\ndocument.body.clientWidth ==> 网页可见区域宽 \ndocument.body.clientHeight ==> 网页可见区域高\ndocument.body.offsetWidth ==> 网页可见区域宽(包括边线的宽)\ndocument.body.offsetHeight ==> 网页可见区域高(包括边线的高)\ndocument.body.scrollWidth ==> 网页正文全文宽document.body.scrollHeight ==> 网页正文全文高\ndocument.body.scrollTop ==> 网页被卷去的高\ndocument.body.scrollLeft ==> 网页被卷去的左\nwindow.screenTop ==> 网页正文部分上\nwindow.screenLeft ==> 网页正文部分左\nwindow.screen.height ==> 屏幕分辨率的高\nwindow.screen.width ==> 屏幕可用工作区高度\nwindow.screen.availHeight ==> 屏幕可用工作区高度\nwindow.screen.availWidth ==> 屏幕可用工作区宽度\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"js判断对象是否为空对象的几种方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js判断对象是否为空对象的几种方法","aria-hidden":"true"}},[this._v("#")]),this._v(" js判断对象是否为空对象的几种方法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('1.将json对象转化为json字符串，再判断该字符串是否为"{}"\nvar data = {};\nvar b = (JSON.stringify(data) == "{}");\nalert(b);//true\n\n2.for in 循环判断\nvar obj = {};\nvar b = function() {\nfor(var key in obj) {\nreturn false;\n}\nreturn true;\n}\nalert(b());//true\n\n3.jquery的isEmptyObject方法\n此方法是jquery将2方法(for in)进行封装，使用时需要依赖jquery\nvar data = {};\nvar b = $.isEmptyObject(data);\nalert(b);//true\n\n4.Object.getOwnPropertyNames()方法\n此方法是使用Object对象的getOwnPropertyNames方法，获取到对象中的属性名，存到一个数组中，返回数组对象，我们可以通过判断数组的length来判断此对象是否为空\n注意：此方法不兼容ie8，其余浏览器没有测试\nvar data = {};\nvar arr = Object.getOwnPropertyNames(data);\nalert(arr.length == 0);//true\n\n5.使用ES6的Object.keys()方法\n与4方法类似，是ES6的新方法, 返回值也是对象中属性名组成的数组\nvar data = {};\nvar arr = Object.keys(data);\nalert(arr.length == 0);//true\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"ajax请求后跳转页面拦截"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ajax请求后跳转页面拦截","aria-hidden":"true"}},[this._v("#")]),this._v(" ajax请求后跳转页面拦截")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('jump(id) {\n          var newPage = window.open();//新开页面\n          this.$http({\n            method: "post",\n            url:""\n          })\n            .then(res => {\n              var loginUrl = "http://172.168.1.203:86/ps/login/login.html";\n              // 返回成功进入新开页面\n              newPage.location = loginUrl\n            })\n            .catch(err => {\n              newPage.close();//失败时候关闭新建页面\n              console.log(err);\n            });\n        },\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期","aria-hidden":"true"}},[this._v("#")]),this._v(" vue生命周期")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("    // 生命周期钩子函数 就是VUE规定的一些在固定阶段执行的函数\n    beforeCreate(){\n        // 创造之前\n        // 不能获取data和methods里的数据\n        console.log('beforeCreate');\n        debugger;\n    },\n    created(){            \n        // 能获取data和methods里的数据\n        // 一般把ajax请求的发送写到这里\n    },\n    beforeMount() {},\n    mounted(){\n        // 在此时DOM已经渲染完成\n    },\n    beforeUpdate(){\n        // 在视图更新时会触发其中函数\n        // 函数在视图更新前执行\n    },\n    updated(){\n        // 在视图更新时会触发其中函数\n        // 函数在视图更新后执行\n        // 不要写会触发视图更新的代码\n    },\n    beforeDestroy(){},\n    //销毁前\n    destroyed(){}\n    //销毁\n   destory();//手动销毁该实例，双向数据绑定没了\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue监听对象的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue监听对象的属性","aria-hidden":"true"}},[this._v("#")]),this._v(" vue监听对象的属性")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('1.普通监听\ndata(){\n    return{\n        aa:""\n    }\n},\nwatch:{\n    aa(newValue,oldValue){\n        ...\n    }\n}\n\n2.对象监听\ndata(){\n    return{\n        aa:{\n            name:"",\n            age:null\n        }\n    }\n},\nwatch:{\n    aa:{\n        handler(newValue,oldValue){\n            ...\n        },\n        deep:true\n    }\n}\n\n3.具体属性监听\ndata(){\n    return{\n        aa:{\n            name:"",\n            age:null\n        }\n    }\n},\ncomputed:{\n    name(){\n        return this.aa.name\n    }\n}\nwatch:{\n    name(newValue,oldValue){\n        ...\n    }\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue计算属性传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue计算属性传参","aria-hidden":"true"}},[this._v("#")]),this._v(" vue计算属性传参")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(':data="closure(item, itemName, blablaParams)"\n\ncomputed: {\n closure () {\n   return function (a, b, c) {\n        /** do something */\n        return data\n    }\n }\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue父子传值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue父子传值","aria-hidden":"true"}},[this._v("#")]),this._v(" vue父子传值")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('1.子接收父级的值\n子：props: {\n      inputName: String,\n      required: true\n    }\n父： <child :inputName="name"></child>\n\n--------------------------------------------------\n2.父接收子值--子调用父级方法\n子： this.$emit(\'changeVal\', xx)\n父：\t<child @changeVal="getChildVal"></child>\ngetChildVal(xx){\n\txxxx\n}\n\n--------------------------------------------------\n\n3.子接收父值--父调用子级方法\n子：getParentData(){xxx}\n父：<child ref="child"></child>\nchangeChild(){\n\tthis.$refs.child.getParentData(xx);//如果子组件还没加载就使用$nextTick\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue中数组和对象更改后视图不刷新的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue中数组和对象更改后视图不刷新的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" Vue中数组和对象更改后视图不刷新的问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("调用方法：Vue.set( target, key, value )\n\ntarget：要更改的数据源(可以是对象或者数组)\n\nkey：要更改的具体数据\n\nvalue ：重新赋的值\n\nTip:Vue.set()在methods中也可以写成this.$set()\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue拖拽事件不生效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue拖拽事件不生效","aria-hidden":"true"}},[this._v("#")]),this._v(" vue拖拽事件不生效")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('@dragenter.prevent @dragover.prevent @drop="drop($event)"\n\ndrop(event) {xxx}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue-路由带参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-路由带参数","aria-hidden":"true"}},[this._v("#")]),this._v(" vue 路由带参数")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("1.\n// 直接调用$router.push 实现携带参数的跳转\n        this.$router.push({\n          path: `/describe/${id}`,\n        })\n\n// 方案一，需要对应路由配置如下：\n   {\n     path: '/describe/:id',\n     name: 'Describe',\n     component: Describe\n   }\n// 很显然，需要在path中添加/:id来对应 $router.push 中path携带的参数。\n\n// 在子组件中可以使用来获取传递的参数值。\n$route.params.id\n\n2.\n// 父组件中：通过路由属性中的name来确定匹配的路由，通过params来传递参数。\n       this.$router.push({\n          name: 'Describe',\n          params: {\n            id: id\n          }\n        })\n\n// 对应路由配置: 注意这里不能使用:/id来传递参数了，因为父组件中，已经使用params来携带参数了。\n   {\n     path: '/describe',\n     name: 'Describe',\n     component: Describe\n   }\n\n//子组件中: 这样来获取参数\n$route.params.id\n\n3.\n// 父组件：使用path来匹配路由，然后通过query来传递参数\n这种情况下 query传递的参数会显示在url后面?id=？\n    this.$router.push({\n          path: '/describe',\n          query: {\n            id: id\n          }\n        })\n\n// 对应路由配置：\n   {\n     path: '/describe',\n     name: 'Describe',\n     component: Describe\n   }\n\n// 对应子组件: 这样来获取参数\n$route.query.id\n\n// 这里要特别注意 在子组件中 获取参数的时候是$route.params 而不是\n$router 这很重要~~~\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue-设置跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-设置跨域","aria-hidden":"true"}},[this._v("#")]),this._v(" vue 设置跨域")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue-config.js文件\ndev: {\n    proxyTable: {\n      '/api': {\n        target: 'http://40.00.100.100:3002/',//设置你调用的接口域名和端口号 别忘了加http\n        changeOrigin: true,\n        pathRewrite: {\n          '^/api': '/'\n                //这里理解成用‘/api’代替target里面的地址，\n                后面组件中我们掉接口时直接用api代替 比如我要调\n                用'http://40.00.100.100:3002/user/add'，直接写‘/api/user/add’即可\n        }\n      }\n    },\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue路由不带token跳转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue路由不带token跳转","aria-hidden":"true"}},[this._v("#")]),this._v(" vue路由不带token跳转")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('router.beforeEach((to, from, next) => {\n  if (localStorage.hasOwnProperty("token")) {\n    next()\n  }else{\n    if (to.path === \'/\' || to.path ==="/register" || to.path === "/forget") {\n      next()\n   } else {\n       next(\'/\')\n   }\n  }\n})\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue路由跳转不刷新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue路由跳转不刷新","aria-hidden":"true"}},[this._v("#")]),this._v(" vue路由跳转不刷新")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"组件渲染完成后操作事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件渲染完成后操作事件","aria-hidden":"true"}},[this._v("#")]),this._v(" 组件渲染完成后操作事件")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("    this.$nextTick(() => {\n        this.$refs.dialogMSG.getdialogInfo(this.dialogGroup);\n    })\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-jsx传不了参数？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-jsx传不了参数？","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui  JSX传不了参数？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("使用这个方式可以传当前参数：\n     onClick={(key,val) => console.log(key,val)}\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-自定义表头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-自定义表头","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui 自定义表头")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<el-table :data="tableData" border style="width: 100%" align="center">\n        <el-table-column prop="name" label="名称" width="120"></el-table-column>\n        <el-table-column >\n          <template slot="header">\n            <div>\n              <tr>\n                <th v-for="(item,index) in weekDays" :key="index">{{item}}</th>\n              </tr>\n            </div>\n          </template>\n          <template v-for="(item,order) in tableHeader">\n            <el-table-column :key="order" :prop="item" :label="item" width="50">\n              <template slot-scope="scope">\n                <span @click="cancelChange($event,scope.row[item])" :style="{backgroundColor:changeColor(scope.row[item])}"></span>\n              </template>\n            </el-table-column>\n          </template>\n        </el-table-column>\n        <el-table-column label="总数" width="50">\n          <template slot-scope="scope">{{getCount(scope.row)}}</template>\n        </el-table-column>\n      </el-table>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-table-自适应表头？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-table-自适应表头？","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui table 自适应表头？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(":render-header = headerRender\n\nheaderRender(h, { column, $index }) {\n  const nowRow =  this.xx[$index-1]; //获取当前列数据\n  column.minWidth = nowRow.value.length * 10 + 77;//根据字数大概估算宽度\n\t//更详细可以区分中文英文来分别判断宽度\n  return nowRow.value;\n   }\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-的-upload组件的clearfiles方法调用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-的-upload组件的clearfiles方法调用方法","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui 的 upload组件的clearFiles方法调用方法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<el-upload ref = "upload">\n    this.$refs.upload.clearFiles();\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-el-tooltip-为空不显示问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-el-tooltip-为空不显示问题","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui el-tooltip 为空不显示问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('  <el-tooltip placement="top" :disabled="item.f1 === \'\' ? true : false" >\n\t<div slot="content">{{tipFqInfo1}}</div>\n  </el-tooltip>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-el-switch-使用number类型不成功"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-el-switch-使用number类型不成功","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui el-switch 使用number类型不成功")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('  <el-switch\n    v-model="scope.row.isUseEailbox"\n    :inactive-value= 0\n    :active-value= 1\n  >\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue批量导入组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue批量导入组件","aria-hidden":"true"}},[this._v("#")]),this._v(" vue批量导入组件")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("  const path = require('path')\n  const files = require.context('./components', false, /\\.vue$/)\n  const modules = {}\n  files.keys().forEach(key => {\n    const name = path.basename(key, '.vue')\n    modules[name] = files(key).default || files(key)\n  })\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"element-ui-前端表格分页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-前端表格分页","aria-hidden":"true"}},[this._v("#")]),this._v(" element-ui 前端表格分页")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用iconfont"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用iconfont","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用iconfont")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('@import "../icons/iconfont/iconfont.css";//引入css\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用svg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用svg","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用svg")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("yarn add svg-sprite-loader\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("const path = require('path')\n\nfunction resolve(dir) {\n  return path.join(__dirname, dir)\n}\nmodule.exports = {\n    chainWebpack: config => {\n        config.module\n            .rule('svg')\n            .exclude.add(resolve('src/svgs'))\n            .end()\n        config.module\n            .rule('icons')\n            .test(/\\.svg$/)\n            .include.add(resolve('src/svgs'))\n            .end()\n            .use('svg-sprite-loader')\n            .loader('svg-sprite-loader')\n            .options({\n                symbolId: 'icon-[name]'\n            })\n            .end()\n      }\n}\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("import './svgs'\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("import Vue from 'vue'\nimport SvgIcon from '@/components/SvgIcon'// svg component\nVue.component('svg-icon', SvgIcon)\nconst requireAll = requireContext => requireContext.keys().map(requireContext)\nconst req = require.context('./svg', false, /\\.svg$/)\nrequireAll(req)\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<template>\n  <svg  :class=\"svgClass\" aria-hidden=\"true\" v-on=\"$listeners\">\n    <use :xlink:href=\"iconName\" />\n  </svg>\n</template>\n\n<script>\n\nexport default {\n  name: 'SvgIcon',\n  props: {\n    iconClass: {\n      type: String,\n      required: true\n    },\n    className: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    iconName() {\n      return `#icon-${this.iconClass}`\n    },\n    svgClass() {\n      if (this.className) {\n        return 'svg-icon ' + this.className\n      } else {\n        return 'svg-icon'\n      }\n    },\n  }\n}\n<\/script>\n\n<style scoped>\n.svg-icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\n\n.svg-external-icon {\n  background-color: currentColor;\n  mask-size: cover!important;\n  display: inline-block;\n}\n</style>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<svg-icon icon-class="bug" />\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"yarn安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yarn安装","aria-hidden":"true"}},[this._v("#")]),this._v(" yarn安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"webstorm-路径的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webstorm-路径的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" webStorm @路径的问题")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用css将图片转换成黑白-灰色、置灰"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用css将图片转换成黑白-灰色、置灰","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用CSS将图片转换成黑白(灰色、置灰)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"html页面编辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html页面编辑","aria-hidden":"true"}},[this._v("#")]),this._v(" html页面编辑")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("在控制台输入document.body.contentEditable=\"true\"或者document.designMode = 'on'就可以实现对网页的编辑了。\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"scss换肤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scss换肤","aria-hidden":"true"}},[this._v("#")]),this._v(" scss换肤")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("1.定义一个sass文件_themes.scss\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("//定义全局主题&颜色的map数组，鉴于V5只有白天和晚上的主题，此处仅定义这两种\n//切记 所有颜色一式两份儿，务必保证key值统一，key值可以自定义，注意避免$%_之类的，\n//与sass自有符号冲突，见文知意即可\n//另外如果基于其他UI框架，如本项目基于element-ui，则只需设置一套dark主题，\n//data-theme为dark时，样式引用dark\n//data-theme为其他值时，自然就采用了elementui的默认样式\n$themes: (\n  light: (\n    font_color1: rgb(196, 193, 193),\n    font_color2: rgb(110, 109, 109),\n    background_color1: rgb(255, 0, 21),\n    background_color2: rgb(87, 87, 226),\n    border_color1: rgb(231, 181, 181),\n    border_color2: rgb(9, 255, 0)\n  ),\n  dark: (\n    font_color1: rgb(226, 222, 222),\n    font_color2: rgb(255, 255, 255),\n    background_color1: rgb(87, 87, 226),\n    background_color2: rgb(255, 0, 21),\n    border_color1: rgb(9, 255, 0),\n    border_color2: rgb(231, 181, 181)\n  )\n);\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('@import "./_themes.scss";\n//此处用了sass的map遍历、函数、map存取、混合器等相关知识，\n//详细API参考https://www.sass.hk/docs/\n//遍历主题map\n@mixin themeify {\n  @each $theme-name, $theme-map in $themes {\n    //!global 把局部变量强升为全局变量\n    $theme-map: $theme-map !global;\n    //这步是判断html的data-theme的属性值  #{}是sass的插值表达式\n    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot\n    [data-theme="#{$theme-name}"] & {\n      @content;\n    }\n  }\n}\n//声明一个根据Key获取颜色的function\n@function themed($key) {\n  @return map-get($theme-map, $key);\n}\n//暂时想到的常用的开发场景下面三种背景颜色、字体颜色、边框颜色  至于阴影什么之类的忽略了\n//获取背景颜色\n@mixin background_color($color) {\n  @include themeify {\n    background-color: themed($color);\n  }\n}\n//获取字体颜色\n@mixin font_color($color) {\n  @include themeify {\n    color: themed($color);\n  }\n}\n//获取边框颜色\n@mixin border_color($color) {\n  @include themeify {\n    border-color: themed($color);\n  }\n}\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style lang="scss" scoped>\n@import "@/style/_handle.scss";\n \np {\n  font-size: 18px;\n  @include font_color("font_color1");\n  @include background_color("background_color1");\n  @include border_color("border_color1");\n}\n</style>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('data(){\n\treturn {\n\t\tindex :false\n\t}\n}\nwindow.document.documentElement.setAttribute(\n        "data-theme",\n        index ? "dark" : "light"\n      );\n\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用svgo压缩svg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用svgo压缩svg","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用svgo压缩svg")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("yarn add svgo\n\n单个文件使用举例：\n\n svgo test.svg\n\n文件夹举例:\nsvgo -f ./svg    //整个文件夹转换\n\nsvgo -f ./svg -o ./output //输出到新的文件夹\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用nvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用nvm","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用nvm")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("下载安装\nhttps://github.com/coreybutler/nvm-windows/releases\n\n切换淘宝源\n在你安装的目录下找到settings.txt文件，打开后加上\nnode_mirror: https://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n\nnvm install version  //安装指定版本、latest 安装最新版本\nnvm list //查看所有node版本\nnvm use version //使用哪个版本\n")])])])}],!1,null,null,null);t.default=r.exports}}]);