(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{179:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"arrary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arrary","aria-hidden":"true"}},[t._v("#")]),t._v(" Arrary")]),t._v(" "),s("h2",{attrs:{id:"isarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isarray","aria-hidden":"true"}},[t._v("#")]),t._v(" isArray")]),t._v(" "),s("blockquote",[s("p",[t._v("Array.isArray(obj) 方法返回一个布尔值，表示参数是否为数组。它可以弥补 typeof 运算符的不足。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntypeof arr // "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\nArray.isArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"valueof-tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof-tostring","aria-hidden":"true"}},[t._v("#")]),t._v(" valueOf toString")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.valueOf() 方法是一个所有对象都拥有的方法，表示对该对象求值。不同对象的 valueOf 方法不尽一致，数组的 valueOf 方法返回数组本身。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr.valueOf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("arr.toString() 方法也是对象的通用方法，数组的 toString 方法返回数组的字符串形式。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr.toString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1,2,3"')]),t._v("\n\nvar arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("4, 5, 6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr.toString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1,2,3,4,5,6"')]),t._v("\n")])])]),s("h2",{attrs:{id:"push-pop-shift-unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-pop-shift-unshift","aria-hidden":"true"}},[t._v("#")]),t._v(" push pop shift unshift")]),t._v(" "),s("ul",[s("li",[t._v("push 方法用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let aa = ['a','b','c']\naa.push(\"d\")\n//['a','b','c','d']\n")])])]),s("ul",[s("li",[t._v("pop 方法用于删除数组的最后一个元素，并返回该元素。注意，该方法会改变原数组。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let aa = ['a','b','c']\naa.pop()\n//['a','b']\n")])])]),s("ul",[s("li",[t._v("shift()方法用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let aa = ['a','b','c']\naa.shift()\n//['b','c']\n")])])]),s("ul",[s("li",[t._v("unshift()方法用于在数组的第一个位置添加元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let aa = ['a','b','c']\naa.unshift(\"d\")\n//['d','a','b','c']\n")])])]),s("h2",{attrs:{id:"join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join","aria-hidden":"true"}},[t._v("#")]),t._v(" join")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.join([separator])")])]),t._v(" "),s("ul",[s("li",[t._v('separator\n指定一个字符串来分隔数组的每个元素。如果需要，将分隔符转换为字符串。如果省略()，数组元素用逗号分隔。默认为 ","。如果 separator 是空字符串("")，则所有元素之间都没有任何字符。')])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Wind'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rain'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Fire'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar myVar1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a.join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      // myVar1的值变为"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wind,Rain,Fire"')]),t._v("\nvar myVar2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a.join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  // myVar2的值变为"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wind, Rain, Fire"')]),t._v("\nvar myVar3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a.join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' + '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // myVar3的值变为"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wind + Rain + Fire"')]),t._v("\nvar myVar4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a.join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    // myVar4的值变为"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WindRainFire"')]),t._v("\n")])])]),s("h2",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat","aria-hidden":"true"}},[t._v("#")]),t._v(" concat")]),t._v(" "),s("blockquote",[s("p",[t._v("var new_array = old_array.concat(value1[, value2[, ...[, valueN]]])")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("4, 5, 6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    num3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("7, 8, 9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nvar nums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1.concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2, num3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3, 4, 5, 6, 7, 8, 9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("es6:[...num1,...num2,...num3]")])]),t._v(" "),s("h2",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse","aria-hidden":"true"}},[t._v("#")]),t._v(" reverse")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.reverse() 颠倒数组中元素的位置，并返回该数组的引用。 注意，该方法将改变原数组。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na.reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[t._v("#")]),t._v(" slice")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.slice(begin, end);")])]),t._v(" "),s("ul",[s("li",[t._v("begin 可选\n从该索引处开始提取原数组中的元素（从 0 开始）。\n如果该参数为负数，则表示从原数组中的倒数第几个元素开始提取，slice(-2)表示提取原数组中的倒数第二个元素到最后一个元素（包含最后一个元素）。\n如果省略 begin，则 slice 从索引 0 开始。")]),t._v(" "),s("li",[t._v("end 可选\n在该索引处结束提取原数组元素（从 0 开始）。slice 会提取原数组中索引从 begin 到 end 的所有元素（包含 begin，但不包含 end）。\n如果 end 被省略，则 slice 会一直提取到原数组末尾。\n如果 end 大于数组长度，slice 也会一直提取到原数组末尾。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("var a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na.slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na.slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na.slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1, 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na.slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na.slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na.slice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-2, -1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice","aria-hidden":"true"}},[t._v("#")]),t._v(" splice")]),t._v(" "),s("blockquote",[s("p",[t._v("array.splice(start[, deleteCount[, item1[, item2[, ...]]]])")])]),t._v(" "),s("ul",[s("li",[t._v("start​\n指定修改的开始位置（从 0 计数）。如果超出了数组的长度，则从数组末尾开始添加内容；如果是负值，则表示从数组末位开始的第几位（从-1 计数，这意味着-n 是倒数第 n 个元素并且等价于 array.length-n）；如果负数的绝对值大于数组的长度，则表示开始位置为第 0 位。")]),t._v(" "),s("li",[t._v("deleteCount 可选\n整数，表示要移除的数组元素的个数。\n如果 deleteCount 大于 start 之后的元素的总数，则从 start 后面的元素都将被删除（含第 start 位）。\n如果 deleteCount 被省略了，或者它的值大于等于 array.length - start(也就是说，如果它大于或者等于 start 之后的所有元素的数量)，那么 start 之后数组的所有元素都会被删除。\n如果 deleteCount 是 0 或者负数，则不移除元素。这种情况下，至少应添加一个新元素。")]),t._v(" "),s("li",[t._v("item1, item2, ... 可选\n要添加进数组的元素,从 start 位置开始。如果不指定，则 splice() 将只删除数组元素。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  从第 2 位开始删除 0 个元素，插入“drum”\nvar myFish "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"angel"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clown"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mandarin"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sturgeon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar removed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myFish.splice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2, 0, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"drum"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// 运算后的 myFish: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"angel"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clown"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"drum"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mandarin"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sturgeon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 被删除的元素: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", 没有元素被删除\n\n  从倒数第 3 位开始删除 1 个元素\nvar myFish "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'angel'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clown'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drum'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mandarin'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sturgeon'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar removed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myFish.splice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3, 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// 运算后的 myFish: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"angel"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clown"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"drum"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sturgeon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 被删除的元素: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mandarin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  从倒数第 2 位开始删除 1 个元素\nvar myFish "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'angel'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clown'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mandarin'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sturgeon'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvar removed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myFish.splice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-2, 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// 运算后的 myFish: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"angel"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clown"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sturgeon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 被删除的元素: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mandarin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort","aria-hidden":"true"}},[t._v("#")]),t._v(" sort")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.sort([compareFunction])")])]),t._v(" "),s("ul",[s("li",[t._v("compareFunction 可选\n用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的 Unicode 位点进行排序。\n"),s("ul",[s("li",[t._v("firstEl\n第一个用于比较的元素。")]),t._v(" "),s("li",[t._v("secondEl\n第二个用于比较的元素。")])])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("4, 2, 5, 1, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".sort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("a, b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a - b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  //从小到大\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Edward'")]),t._v(", value: 21 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Sharpe'")]),t._v(", value: 37 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'And'")]),t._v(", value: 45 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The'")]),t._v(", value: -12 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Magnetic'")]),t._v(", value: 8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Zeros'")]),t._v(", value: 37 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  .sort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("a, b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a.value - b.value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" //对象可以按照某个属性排序：\n")])])]),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[t._v("#")]),t._v(" map")]),t._v(" "),s("blockquote",[s("p",[t._v("var new_array = arr.map(function callback(currentValue[, index[, array]]) {}[, thisArg])")])]),t._v(" "),s("p",[s("strong",[t._v("返回值:一个新数组，每个元素都是回调函数的结果。")])]),t._v(" "),s("ul",[s("li",[t._v("callback\n生成新数组元素的函数，使用三个参数：\n"),s("ul",[s("li",[t._v("currentValue\n数组中正在处理的当前元素。")]),t._v(" "),s("li",[t._v("index可选\n数组中正在处理的当前元素的索引。")]),t._v(" "),s("li",[t._v("array可选\nmap 方法被调用的数组。")])])]),t._v(" "),s("li",[t._v("thisArg可选\n执行 callback 函数时使用的this 值。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("如何去遍历用 querySelectorAll 得到的动态对象集合\nvar lists "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document.querySelectorAll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nArray.prototype.map.call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lists,x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("x.classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n// 下面的语句返回什么呢:\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// 你可能觉的会是"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 但实际的结果是 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, NaN, NaN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 通常使用parseInt时,只需要传递一个参数.\n// 但实际上,parseInt可以有两个参数.第二个参数是进制数.\n// 可以通过语句"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alert(parseInt.length)===2"')]),t._v("来验证.\n// map方法在调用callback函数时,会给它传递三个参数:当前正在遍历的元素, \n// 元素索引, 原数组本身.\n// 第三个参数parseInt会忽视, 但第二个参数不会,也就是说,\n// parseInt把传过来的索引值当成进制数来使用.从而返回了NaN.\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" returnInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" parseInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element, 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 意料之中的结果\n\n// 也可以使用简单的箭头函数，结果同上\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" parseInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n// 一个更简单的方式:\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// 与"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("parseInt"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" 不同，下面的结果会返回浮点数或指数:\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.1'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.2e2'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3e300'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1.1, 220, 3e+300"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach","aria-hidden":"true"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.forEach(callback[, thisArg]);")])]),t._v(" "),s("p",[s("strong",[t._v("返回值:undefined.")])]),t._v(" "),s("ul",[s("li",[t._v("callback\n为数组中每个元素执行的函数，该函数接收三个参数：\n"),s("ul",[s("li",[t._v("currentValue\n数组中正在处理的当前元素。")]),t._v(" "),s("li",[t._v("index可选\n数组中正在处理的当前元素的索引。")]),t._v(" "),s("li",[t._v("array可选\nforEach() 方法正在操作的数组。")])])]),t._v(" "),s("li",[t._v("thisArg可选\n可选参数。当执行回调函数时用作 this 的值(参考对象)。")])]),t._v(" "),s("p",[s("strong",[t._v("注意： 没有办法中止或者跳出 forEach() 循环，除了抛出一个异常。如果你需要这样，使用 forEach() 方法是错误的。")]),t._v(" "),s("strong",[t._v("注意：如果使用箭头函数表达式来传入函数参数，thisArg 参数会被忽略，因为箭头函数在词法上绑定了 this 值。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item1'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item2'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".forEach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item,index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item,index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  //item1 0   item2 1   item3 2\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nvar out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".forEach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  this.push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem * elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nout // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 4, 9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter","aria-hidden":"true"}},[t._v("#")]),t._v(" filter")]),t._v(" "),s("blockquote",[s("p",[t._v("var newArray = arr.filter(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),s("p",[s("strong",[t._v("返回值:一个新的、由通过测试的元素组成的数组，如果没有任何数组元素通过测试，则返回空数组。")])]),t._v(" "),s("ul",[s("li",[t._v("callback\n用来测试数组的每个元素的函数。返回 true 表示该元素通过测试，保留该元素，false 则不保留。它接受以下三个参数：\n"),s("ul",[s("li",[t._v("element\n数组中当前正在处理的元素。")]),t._v(" "),s("li",[t._v("index可选\n正在处理的元素在数组中的索引。")]),t._v(" "),s("li",[t._v("array可选\n调用了 filter 的数组本身。")])])]),t._v(" "),s("li",[t._v("thisArg可选\n执行 callback 时，用于 this 的值。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("12, 5, 8, 130, 44"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 33\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 130, 44 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  //根据搜索条件来过滤数组内容。\nconst fruits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'banana'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grapes'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mango'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'orange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconst filterItems "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fruits.filter"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("{\n    el.toLowerCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".indexOf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query.toLowerCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -1\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filterItems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ap'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grapes'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filterItems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'an'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'banana'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mango'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'orange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"some-every"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some-every","aria-hidden":"true"}},[t._v("#")]),t._v(" some every")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.some(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),s("p",[s("strong",[t._v("返回值 : 如果回调函数返回至少一个数组元素的truthy值，则返回true；否则为false。")])]),t._v(" "),s("blockquote",[s("p",[t._v("arr.every(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),s("p",[s("strong",[t._v("返回值 : 如果回调函数的每一次返回都为 truthy 值，返回 true ，否则返回 false。")])]),t._v(" "),s("ul",[s("li",[t._v("callback\n用来测试每个元素的函数，接受三个参数：\n"),s("ul",[s("li",[t._v("element\n数组中正在处理的元素。")]),t._v(" "),s("li",[t._v("index 可选\n数组中正在处理的元素的索引值。")]),t._v(" "),s("li",[t._v("array可选\nsome()被调用的数组。")])])]),t._v(" "),s("li",[t._v("thisArg可选\n执行 callback 时使用的 this 值。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("2, 5, 8, 1, 4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  // "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("12, 5, 8, 1, 4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("12, 5, 8, 130, 44"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".every"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("12, 54, 18, 130, 44"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".every"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"reduce-reduceright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reduce-reduceright","aria-hidden":"true"}},[t._v("#")]),t._v(" reduce reduceRight")]),t._v(" "),s("blockquote",[s("p",[t._v("arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue]) //从左到右")])]),t._v(" "),s("blockquote",[s("p",[t._v("arr.reduceRight(callback(accumulator, currentValue[, index[, array]])[, initialValue]) //从右到左")])]),t._v(" "),s("p",[s("strong",[t._v("返回值 : 函数累计处理的结果")])]),t._v(" "),s("ul",[s("li",[t._v("callback\n执行数组中每个值的函数，包含四个参数：\n"),s("ul",[s("li",[t._v("accumulator")]),t._v(" "),s("li",[t._v("累计器累计回调的返回值; 它是上一次调用回调时返回的累积值，或initialValue。")]),t._v(" "),s("li",[t._v("currentValue\n数组中正在处理的元素。")]),t._v(" "),s("li",[t._v("currentIndex可选\n数组中正在处理的当前元素的索引。 如果提供了initialValue，则起始索引号为0，否则为1。")]),t._v(" "),s("li",[t._v("array可选\n调用reduce()的数组")])])]),t._v(" "),s("li",[t._v("initialValue可选\n作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0, 1, 2, 3, 4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".reduce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("prev, curr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" prev + curr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("//10\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0, 1, 2, 3, 4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".reduce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("accumulator, currentValue, currentIndex, array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" accumulator + currentValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", 10 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //20\n")])])]),s("h2",{attrs:{id:"indexof-lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof-lastindexof","aria-hidden":"true"}},[t._v("#")]),t._v(" indexOf lastIndexOf")]),t._v(" "),s("h2",{attrs:{id:"includes-lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes-lastindexof","aria-hidden":"true"}},[t._v("#")]),t._v(" includes lastIndexOf")])])}],!1,null,null,null);a.default=r.exports}}]);